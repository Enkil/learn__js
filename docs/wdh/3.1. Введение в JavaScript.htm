<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>


<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="Author" content="Юрий Лукач">
<meta name="Description" content="Справочник Веб-разработчика: современные технологии WWW">
<meta name="Keywords" content="WWW, Веб, разработка, программирование, HTML, DHTML, CSS, Java, JavaScript, CGI, PERL, ASP, XML, XSL, VML, VRML"><title>WDH: JavaScript - Введение в JavaScript</title>

<link rel="Prev" href="http://wdh.suncloud.ru/css13.htm" title="Звуковые таблицы стилей">
<link rel="Next" href="http://wdh.suncloud.ru/js02.htm" title="Основные понятия">
<link rel="Copyright" href="http://wdh.suncloud.ru/cpyright.htm" title="Сведения об авторских правах">
<link rev="Made" href="mailto:yury@suncloud.ru" title="Обратная связь">
<script type="text/javascript" src="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/load.js"></script>
<script type="text/javascript" src="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/link.js"></script><link rel="stylesheet" type="text/css" href="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/nn5.css"></head><body onload="initDoc(); addBanner(true)">
<table style="margin: 0pt;" border="0" cellpadding="0" cellspacing="0" width="100%">
  <tbody><tr><td><div id="divHeader"><p style="margin: 0pt; text-indent: 0pt; text-align: center; font-family: arial,sans-serif; color: rgb(0, 0, 204);">Ю. Лукач «Справочник Веб-разработчика»</p><hr size="2"><table style="margin: 0pt;" border="0" cellpadding="0" cellspacing="0" height="24" width="100%"><tbody><tr><td align="left" width="33%"><a href="http://wdh.suncloud.ru/css13.htm"><img name="imglefta" src="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/nnleft.gif" alt="" title="Звуковые таблицы стилей" onmouseover="showSelected(this)" onmouseout="showNormal(this)" border="0"></a></td><td align="center" width="34%"><a href="http://wdh.suncloud.ru/contents.htm"><img name="imgupa" src="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/nnup.gif" alt="" title="Содержание" onmouseover="showSelected(this)" onmouseout="showNormal(this)" border="0"></a></td><td align="right" width="33%"><a href="http://wdh.suncloud.ru/js02.htm"><img name="imgrighta" src="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/nnright.gif" alt="" title="Основные понятия" onmouseover="showSelected(this)" onmouseout="showNormal(this)" border="0"></a></td></tr></tbody></table><hr size="2"></div></td></tr>
  <tr><td id="tdBanner" style="text-align: center;"><script type="text/javascript">addBanner(false);</script><div class="banner"><a href="http://ad.tbn.ru/bb.cgi?cmd=go&amp;pubid=160692&amp;pg=2&amp;vbn=188&amp;num=1&amp;w=468&amp;h=60&amp;nocache=4094" target="_blank"><img src="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/bb.gif" alt="TBN.ru - СЕТЬ, ЖИВУЩАЯ ПО ПРАВИЛАМ" border="0" height="60" width="468"></a></div></td></tr>
  <tr><td>

      <h1><a name="ref3">Часть III.<br>
        Сценарии клиента: язык JavaScript</a></h1>

      <p class="epigraph">"Ducunt volentem fata, nolentem trahunt."<br>
        "Желающего судьба ведет, не желающего тащит."</p>

      <p class="epauthor">Сенека, "Послания", 107</p>

      <h2><a name="ref31">Глава 3.1. Введение в JavaScript</a></h2>

      <h3><a name="ref311">3.1.1. Что такое JavaScript?</a></h3>

      <p>Язык программирования JavaScript был разработан Бренданом Эйком (Brendan Eich) в Netscape Communications
        как язык сценариев для обозревателей Netscape Navigator, начиная с версии 2.0. В дальнейшем
        к развитию этого языка подключилась корпорация Microsoft, чьи обозреватели Internet Explorer
        поддерживают JavaScript, начиная с версии 3.0. Версия Microsoft получила название JScipt, поскольку
        JavaScript является зарегистрированной маркой фирмы Netscape. В 1996 г. <a href="http://wdh.suncloud.ru/organs.htm#ecma">ECMA</a>
        приняла решение о стандартизации этого языка, и в июне 1997 г. была принята первая версия стандарта
        под названием ECMAScript (ECMA-262). В апреле 1998 г. этот стандарт был принят <a href="http://wdh.suncloud.ru/organs.htm#iso">ISO</a>
        в качестве международного под номером ISO/IEC 16262. Мы в последующем изложении основываемся
        на третьей версии стандарта ECMA (декабрь 1999 г.), но используем название JavaScript, а не
        ECMAScript по двум причинам:</p>

      <ol>
        <li>Это название является исторически первым, и под ним данный язык наиболее известен широкому
          кругу пользователей.</li>
        <li>Соответствующий тип MIME, а именно "text/javascript", распознается всеми обозревателями,
          которые поддерживают сценарии на данном языке, в отличие от JScript или ECMAScript.</li>
      </ol>

      <p>JavaScript&nbsp;— это объектно-ориентированный язык программирования, предназначенный
        для написания сценариев, работающих как на стороне клиента, так и на стороне сервера. Поэтому
        он не является "полноценным" языком программирования, а ориентирован на использование
        возможностей той среды, в которой сценарии исполняются.</p>

      <p>Веб-обозреватель, работающий на компьютере-клиенте, обеспечивает среду, в которой JavaScript
        имеет доступ к объектам, которые представляют собой окна, меню, диалоги, текстовые области,
        фреймы, куки и ввод-вывод в Веб-страницу. Кроме того, обозреватель позволяет присоединить сценарии
        на языке JavaScript к таким событиям, как загрузка и выгрузка страниц и графических образов,
        нажатие клавиш и движение мыши, выбор текста и пересылка форм. При этом программный код сценариев
        только реагирует на события и поэтому не нуждается в главной программе. Набор объектов, предоставляемых
        обозревателем, известен под названием Document Object Model (DOM). Способы включения сценариев,
        написанных на JavaScript, в HTML-документы подробно описаны в <a href="http://wdh.suncloud.ru/html09.htm#ref19">гл. 1.9</a>.</p>

      <p>Веб-сервер обеспечивает иную среду, в которой объектами являются запросы к базам данных, клиенты,
        файлы и механизмы блокировки и совместного использования данных. Совместное использование сценариев
        и на стороне клиента, и на стороне сервера позволяет распределить вычисления между ними и обеспечить
        желаемый пользовательский интерфейс для Веб-приложения. Здесь мы сосредоточимся на тех возможностях
        языка, которые используются сценариями клиента; сценарии сервера рассматриваются в <a href="http://wdh.suncloud.ru/asp01.htm">Части
        VII</a>.</p>

      <p>Для изучения этой главы полезно иметь опыт работы с каким-либо объектно-ориентированным языком
        программирования, например, C++ или Java, поскольку основные понятия в JavaScript те же самые.
        Однако, даже при отсутствии программистского опыта чтение этой главы позволит Вам научиться
        писать собственные сценарии или, по меньшей мере, разбираться в сценариях, написанных другими
        авторами.</p>

      <h3><a name="ref312">3.1.2. Обзор языка</a></h3>

      <p>JavaScript&nbsp;— это язык программирования, основанный на объектах: и языковые средства,
        и возможности среды представляются объектами, а сценарий (программа) на JavaScript&nbsp;—
        это набор взаимодействующих объектов. <em>Объект</em> JavaScript&nbsp;— это неупорядоченный
        набор <em>свойств</em>, каждое из которых имеет нуль или более <em>атрибутов</em>, которые определяют,
        как это свойство может использоваться. Например, если атрибуту свойства <strong>ReadOnly</strong>
        (неизменяемый) присвоено значение <strong>true</strong> (истина), то все попытки программно
        изменить значение этого свойства будут безрезультатны. Свойства&nbsp;— это контейнеры,
        которые содержат другие объекты, <em>примитивные значения </em>и <em>методы</em>. Примитивное
        значение&nbsp;— это элемент любого из встроенных типов: <strong>Undefined</strong>, <strong>Null</strong>,
        <strong>Boolean</strong>, <strong>Number</strong> и <strong>String</strong>; объект&nbsp;—
        это элемент еще одного встроенного типа <strong>Object</strong>; метод&nbsp;— функция,
        ассоциированная с объектом через свойство.</p>

      <p>JavaScript содержит несколько <em>встроенных объектов</em>, таких, как <strong>Global</strong>,
        <strong>Object</strong>, <strong>Error</strong>, <strong>Function</strong>, <strong>Array</strong>,
        <strong>String</strong>, <strong>Boolean</strong>, <strong>Number</strong>, <strong>Math</strong>,
        <strong>Date</strong>, <strong>RegExp</strong>. Кроме того, JavaScript содержит набор встроенных
        <em>операций</em>, которые, строго говоря, не обязательно являются функциями или методами, а
        такжн набор встроенных операторов, управляющих логикой выполнения программ. Синтаксис JavaScript
        в основном соответствует синтаксису языка Java, но упрощен в сравнении с ним, чтобы сделать
        язык сценариев легким для изучения. Так, к примеру, декларация переменной не содержит ее типа,
        свойства также не имеют типов, а декларация функции может стоять в тексте программы после ее
        вызова.</p>

      <h3><a name="ref313">3.1.3. Общие сведения об объектах</a></h3>

      <p>Язык JavaScript, в отличие от языков Java и C++, не содержит классов объектов в строгом смысле
        слова. Вместо этого он поддерживает <em>конструкторы</em>, которые создают объекты путем выделения
        для них памяти и инициализации всех или некоторых их свойств. Все конструкторы являются объектами,
        но не все объекты являются конструкторами. Каждый конструктор имеет свойство <strong>prototype</strong>,
        которое используется для реализации <em>наследования, основанного на прототипах</em>, и <em>разделяемых
        свойств</em>. Объекты создаются путем вызова конструктора в операции <strong>new</strong>; например
        <code>new String("Это строка")</code> создает новый объект <strong>String</strong>.
        Результат вызова конструктора без <strong>new</strong> зависит от конструктора. Так, <code>String("Это
        строка")</code> создает примитивную строку, а не объект.</p>

      <p>JavaScript поддерживает наследование, основанное на прототипах. С каждым конструктором связан
        соответствующий прототип, и каждый объект, созданный конструктором, содержит неявную ссылку
        на этот прототип (называемый <em>прототипом объекта</em>). Прототип, в свою очередь, может содержать
        ссылку на свой прототип и так далее. Так образуется <em>цепочка прототипов</em>. Ссылка на свойство
        объекта&nbsp;— это ссылка на первый прототип в цепочке прототипов объекта, который содержит
        свойство с данным именем. Иными словами, если данный объект имеет свойство с данным именем,
        то используется ссылка на это свойство; если нет, то исследуется прототип этого объекта и т.&nbsp;д.</p>

      <p>В объектно-ориентированных языках, основанных на классах объектов, текущее состояние реализуется
        экземплярами классов, методы реализуются классами, а наследование&nbsp;— структурой и поведением.
        В JavaScript текущее состояние и методы реализуются объектами, а структура и поведение наследуются.
        Все объекты, которое явно содержат свойство, которое содержит их прототип, разделяют это свойство
        и его значение. В отличие от языков, основанных на классах, свойства могут динамически добавляться
        к объектам путем присвоения им значений. В частности, конструкторы не обязаны присваивать значения
        всем или некоторым свойствам создаваемого объекта.</p>

      <h3><a name="ref314">3.1.4. Базовые определения</a></h3>

      <p>После краткого описания языка JavaScript дадим неформальные определения его основных понятий.</p>

      <dl>
        <dt><strong>Тип</strong></dt>
        <dd>Набор значений данных.</dd>
        <dt><strong>Примитивное значение</strong></dt>
        <dd>Элемент одного из типов <strong>Undefined</strong>, <strong>Null</strong>, <strong>Boolean</strong>,
          <strong>Number</strong> или <strong>String</strong>. Примитивные значения&nbsp;— это
          данные, которые представляются непосредственно и на самом нижнем уровне реализации языка.</dd>
        <dt><strong>Объект</strong></dt>
        <dd>Элемент типа <strong>Object</strong>; является неупорядоченным набором <em>свойств</em>,
          каждое из которых может быть примитивным значением, объектом или функцией. Свойство, являющееся
          функцией, называется <em>методом</em>.</dd>
        <dt><strong>Конструктор</strong></dt>
        <dd>Функция, которая создает и инициализирует объекты. Каждый конструктор имеет соответствующий
          <em>прототип</em>, который используется для наследования и разделения свойств.</dd>
        <dt><strong>Прототип</strong></dt>
        <dd>Объект, который используется в JavaScript для реализации наследования структуры, состояния
          и поведения. Когда конструктор создает объект, последний содержит неявную ссылку на прототип
          конструктора, позволяющий разрешать ссылки на свойства данного объекта. Свойства прототипа
          разделяются всеми объектами, созданными на его основе.</dd>
        <dt><strong>Объект языка</strong></dt>
        <dd>Любой объект, который поддерживается реализацией языка JavaScript, а не средой исполнения
          сценариев. Часть объектов языка являются встроенными; другие создаются в процессе выполнения
          сценария.</dd>
        <dt><strong>Встроенный объект</strong></dt>
        <dd>Любой объект, который поддерживается реализацией языка JavaScript независимо от среды исполнения
          и существующий на момент начала исполнения сценария. Все встроенные объекты являются объектами
          языка.</dd>
        <dt><strong>Объект среды</strong></dt>
        <dd>Любой объект, который не является объектом языка, а поддерживается средой исполнения сценариев.</dd>
        <dt><strong>Неопределенное значение</strong></dt>
        <dd>Примитивное значение, которое означает, что переменной не присвоено никакого значения.</dd>
        <dt><strong>Тип Undefined</strong></dt>
        <dd>Этот тип состоит из единственного значения <strong>undefined</strong>, которое является
          неопределенным.</dd>
        <dt><strong>Нулевое значение</strong></dt>
        <dd>Примитивное значение, которое означает нулевую, пустую или несуществующую ссылку.</dd>
        <dt><strong>Тип Null</strong></dt>
        <dd>Этот тип состоит из единственного значения <strong>null</strong>, которое является нулевым.</dd>
        <dt><strong>Логическое значение</strong></dt>
        <dd>Примитивное значение типа <strong>Boolean</strong>, означающее истину или ложь.</dd>
        <dt><strong>Тип Boolean</strong></dt>
        <dd>Тип, состоящий ровно из двух значений: <strong>true</strong> (истина) и <strong>false</strong>
          (ложь).</dd>
        <dt><strong>Логический объект</strong></dt>
        <dd>Элемент типа <strong>Object</strong>, который является экземпляром встроенного логического
          объекта. Иными словами, логический объект создается выражением <code>new Boolean(value)</code>,
          где value&nbsp;— логическое значение. Результирующий объект имеет неявное (безымянное)
          свойство типа <strong>Boolean</strong>.</dd>
        <dt><strong>Строковое значение</strong></dt>
        <dd>Элемент типа <strong>String</strong>. Предсталяет собой строку символов, т .&nbsp;е. упорядоченный
          массив из нуля или более символов Unicode (т.&nbsp;е. 16-битовых целых чисел без знака).</dd>
        <dt><strong>Тип String</strong></dt>
        <dd>Этот тип состоит из всех возможных строковых значений.</dd>
        <dt><strong>Строковый объект</strong></dt>
        <dd>Элемент типа <strong>Object</strong>, который является экземпляром встроенного строкового
          объекта. Иными словами, строковый объект создается выражением <code>new String(value)</code>,
          где value&nbsp;— строковое значение. Результирующий объект имеет неявное (безымянное)
          свойство типа <strong>String</strong>.</dd>
        <dt><strong>Числовое значение</strong></dt>
        <dd>Элемент типа <strong>Number</strong>. Является непосредственным представлением числа.</dd>
        <dt><strong>Тип Number</strong></dt>
        <dd>Тип, состоящий из всех возможных числовых значений. Точнее говоря, это набор 64-битовых
          числовых значений формата IEEE 754, включающий специальные значения <strong>NaN</strong> (не
          число), положительная бесконечность и отрицательная бесконечность.</dd>
        <dt><strong>Числовой объект</strong></dt>
        <dd>Элемент типа <strong>Object</strong>, который является экземпляром встроенного числового
          объекта. Иными словами, числовой объект создается выражением <code>new Number(value)</code>,
          где value&nbsp;— числовое значение. Результирующий объект имеет неявное (безымянное)
          свойство типа <strong>Number</strong>.</dd>
        <dt><strong>Бесконечность</strong></dt>
        <dd>Примитивное значение <strong>Infinity</strong>, являющееся элементом типа <strong>Number</strong>.</dd>
        <dt><strong>NaN</strong></dt>
        <dd>Примитивное значение <strong>NaN</strong> (не число), являющееся элементом типа <strong>Number</strong>.</dd>
      </dl>

    </td></tr>
  <tr><td><div id="divFooter"><hr size="2"><table style="margin: 0pt;" border="0" cellpadding="0" cellspacing="0" height="24" width="100%"><tbody><tr><td align="left" width="33%"><a href="http://wdh.suncloud.ru/css13.htm"><img name="imgleftb" src="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/nnleft.gif" alt="" title="Звуковые таблицы стилей" onmouseover="showSelected(this)" onmouseout="showNormal(this)" border="0"></a></td><td align="center" width="34%"><a href="http://wdh.suncloud.ru/contents.htm"><img name="imgdownb" src="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/nndown.gif" alt="" title="Содержание" onmouseover="showSelected(this)" onmouseout="showNormal(this)" border="0"></a></td><td align="right" width="33%"><a href="http://wdh.suncloud.ru/js02.htm"><img name="imgrightb" src="3.1.%20%C2%E2%E5%E4%E5%ED%E8%E5%20%E2%20JavaScript_files/nnright.gif" alt="" title="Основные понятия" onmouseover="showSelected(this)" onmouseout="showNormal(this)" border="0"></a></td></tr></tbody></table><hr size="2"><p style="margin: 0pt; text-indent: 0pt; text-align: center; font-family: arial,sans-serif; color: rgb(0, 0, 204);">Последнее изменение страницы: 13 мая 2002 г.</p></div></td></tr>
</tbody></table>
</body></html>